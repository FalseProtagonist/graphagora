;; Analyzed by ClojureScript 1.7.48
{:use-macros nil, :excludes #{}, :name demo.notes, :imports nil, :requires nil, :uses nil, :defs {clear-stuff {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 6, :column 7, :end-line 6, :end-column 18, :arglists (quote ([]))}, :name demo.notes/clear-stuff, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-circle-coordinates {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 21, :column 7, :end-line 21, :end-column 29, :arglists (quote ([nx ny r]))}, :name demo.notes/get-circle-coordinates, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 29, :method-params ([nx ny r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([nx ny r]))}, neighbours {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 3, :column 7, :end-line 3, :end-column 17, :arglists (quote ([nx ny cx cy state]))}, :name demo.notes/neighbours, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 17, :method-params ([nx ny cx cy state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 5, :fn-var true, :arglists (quote ([nx ny cx cy state]))}, states {:name demo.notes/states, :file "src/cljs/demo/notes.cljs", :line 16, :column 1, :end-line 16, :end-column 12, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 16, :column 6, :end-line 16, :end-column 12}}, circle-data {:name demo.notes/circle-data, :file "src/cljs/demo/notes.cljs", :line 63, :column 1, :end-line 63, :end-column 17, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 63, :column 6, :end-line 63, :end-column 17}}, modify-circles {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 53, :column 7, :end-line 53, :end-column 21, :arglists (quote ([info color]))}, :name demo.notes/modify-circles, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 21, :method-params ([info color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([info color]))}, draw-circles {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 41, :column 7, :end-line 41, :end-column 19, :arglists (quote ([info]))}, :name demo.notes/draw-circles, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 19, :method-params ([info]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([info]))}, color-circles {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 9, :column 7, :end-line 9, :end-column 20, :arglists (quote ([]))}, :name demo.notes/color-circles, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, colormap {:name demo.notes/colormap, :file "src/cljs/demo/notes.cljs", :line 18, :column 1, :end-line 18, :end-column 14, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 18, :column 6, :end-line 18, :end-column 14}}, draw-svg {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 34, :column 7, :end-line 34, :end-column 15, :arglists (quote ([width height]))}, :name demo.notes/draw-svg, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 15, :method-params ([width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([width height]))}, refresh-stuff {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 65, :column 7, :end-line 65, :end-column 20, :arglists (quote ([]))}, :name demo.notes/refresh-stuff, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :r :color :dead :alive :width :circles :x :live :height}, :order [:dead :live :x :y :r :circles :width :height :alive :color]}, :doc nil}