;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name demo.routes, :imports nil, :requires {clojure.set clojure.set, silk domkm.silk, domkm.silk domkm.silk, pushy pushy.core, pushy.core pushy.core, demo.util demo.util, re-frame re-frame.core, re-frame.core re-frame.core, demo.db demo.db}, :uses {log demo.util, db demo.db, rename-keys clojure.set}, :defs {routes {:name demo.routes/routes, :file "src/cljs/demo/routes.cljs", :line 11, :column 1, :end-line 11, :end-column 12, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/routes.cljs", :line 11, :column 6, :end-line 11, :end-column 12}}, sanitize-silk-keywords {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/routes.cljs", :line 15, :column 8, :end-line 15, :end-column 30, :private true, :arglists (quote ([matched-route]))}, :private true, :name demo.routes/sanitize-silk-keywords, :variadic false, :file "src/cljs/demo/routes.cljs", :end-column 30, :method-params ([matched-route]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([matched-route]))}, parse-url {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/routes.cljs", :line 21, :column 8, :end-line 21, :end-column 17, :private true, :arglists (quote ([url]))}, :private true, :name demo.routes/parse-url, :variadic false, :file "src/cljs/demo/routes.cljs", :end-column 17, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, dispatch-route {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/routes.cljs", :line 24, :column 8, :end-line 24, :end-column 22, :private true, :arglists (quote ([matched-route]))}, :private true, :name demo.routes/dispatch-route, :variadic false, :file "src/cljs/demo/routes.cljs", :end-column 22, :method-params ([matched-route]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([matched-route]))}, app-routes {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/routes.cljs", :line 31, :column 7, :end-line 31, :end-column 17, :arglists (quote ([]))}, :name demo.routes/app-routes, :variadic false, :file "src/cljs/demo/routes.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:domkm.silk/pattern :routes :home :domkm.silk/routes :name :domkm.silk/name :life :panel :domkm.silk/url :url :about :pattern}, :order [:home :about :life :domkm.silk/name :domkm.silk/pattern :domkm.silk/routes :domkm.silk/url :name :pattern :routes :url :panel]}, :doc nil}