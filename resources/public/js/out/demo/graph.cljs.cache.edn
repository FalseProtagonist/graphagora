;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name demo.graph, :imports nil, :requires {demo.util demo.util, r reagent.core, reagent.core reagent.core}, :uses {log demo.util, avail-width demo.util, avail-height demo.util}, :defs {getrandomnodes {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/graph.cljs", :line 9, :column 7, :end-line 9, :end-column 21, :arglists (quote ([n width height]))}, :name demo.graph/getrandomnodes, :variadic false, :file "src/cljs/demo/graph.cljs", :end-column 21, :method-params ([n width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 3, :fn-var true, :arglists (quote ([n width height]))}, getrandomlinks {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/graph.cljs", :line 15, :column 7, :end-line 15, :end-column 21, :arglists (quote ([n]))}, :name demo.graph/getrandomlinks, :variadic false, :file "src/cljs/demo/graph.cljs", :end-column 21, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, clear-command {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/graph.cljs", :line 21, :column 6, :end-line 21, :end-column 19}, :name demo.graph/clear-command, :variadic false, :file "src/cljs/demo/graph.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists nil}, force-layout {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/graph.cljs", :line 27, :column 7, :end-line 27, :end-column 19, :arglists (quote ([]))}, :name demo.graph/force-layout, :variadic false, :file "src/cljs/demo/graph.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-svg {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/graph.cljs", :line 98, :column 7, :end-line 98, :end-column 15, :arglists (quote ([]))}, :name demo.graph/draw-svg, :variadic false, :file "src/cljs/demo/graph.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, force-component {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/graph.cljs", :line 101, :column 7, :end-line 101, :end-column 22, :arglists (quote ([]))}, :name demo.graph/force-component, :variadic false, :file "src/cljs/demo/graph.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :component-did-mount :source :reagent-render :graph :x :target :div#dancing}, :order [:x :y :graph :source :target :div#dancing :reagent-render :component-did-mount]}, :doc nil}