;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name demo.notes, :imports nil, :requires nil, :uses nil, :defs {select-values {:name demo.notes/select-values, :file "src/cljs/demo/notes.cljs", :line 3, :column 1, :end-line 3, :end-column 19, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 3, :column 6, :end-line 3, :end-column 19}}, iterate-life {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 10, :column 7, :end-line 10, :end-column 19, :arglists (quote ([circles nx ny neighbours]))}, :name demo.notes/iterate-life, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 19, :method-params ([circles nx ny neighbours]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 4, :fn-var true, :arglists (quote ([circles nx ny neighbours]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:alive :circles}, :order [:circles :alive]}, :doc nil}