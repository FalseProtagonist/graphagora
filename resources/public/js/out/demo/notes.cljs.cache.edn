;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name demo.notes, :imports nil, :requires nil, :uses nil, :defs {clear-stuff-here {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 4, :column 7, :end-line 4, :end-column 23, :arglists (quote ([]))}, :name demo.notes/clear-stuff-here, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, play {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 7, :column 7, :end-line 7, :end-column 11, :arglists (quote ([]))}, :name demo.notes/play, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, play2 {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 12, :column 7, :end-line 12, :end-column 12, :arglists (quote ([]))}, :name demo.notes/play2, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-circles {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 17, :column 7, :end-line 17, :end-column 19, :arglists (quote ([info]))}, :name demo.notes/draw-circles, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 19, :method-params ([info]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([info]))}, get-data {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 32, :column 7, :end-line 32, :end-column 15, :arglists (quote ([]))}, :name demo.notes/get-data, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-elements {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 36, :column 7, :end-line 36, :end-column 22, :arglists (quote ([data transition]))}, :name demo.notes/update-elements, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 22, :method-params ([data transition]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data transition]))}, create-elements {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 49, :column 7, :end-line 49, :end-column 22, :arglists (quote ([data transition]))}, :name demo.notes/create-elements, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 22, :method-params ([data transition]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data transition]))}, play3 {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/notes.cljs", :line 64, :column 7, :end-line 64, :end-column 12, :arglists (quote ([]))}, :name demo.notes/play3, :variadic false, :file "src/cljs/demo/notes.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:circles}, :order [:circles]}, :doc nil}