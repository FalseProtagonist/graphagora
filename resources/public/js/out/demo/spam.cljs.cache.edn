;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name demo.spam, :imports nil, :requires {demo.util demo.util, r reagent.core, reagent.core reagent.core}, :uses {log demo.util, get-jskeys demo.util, d3-select demo.util, avail-width demo.util, avail-height demo.util}, :defs {text {:name demo.spam/text, :file "src/cljs/demo/spam.cljs", :line 6, :column 1, :end-line 6, :end-column 10, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/spam.cljs", :line 6, :column 6, :end-line 6, :end-column 10}}, spam-component {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/spam.cljs", :line 8, :column 7, :end-line 8, :end-column 21, :arglists (quote ([]))}, :name demo.spam/spam-component, :variadic false, :file "src/cljs/demo/spam.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:name :textarea :rows :div :cols :id :on-input}, :order [:div :textarea :name :id :cols :rows :on-input]}, :doc nil}