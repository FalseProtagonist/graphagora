;; Analyzed by ClojureScript 0.0-3058
{:use-macros nil, :excludes #{}, :name demo.app, :imports nil, :requires {core demo.core, demo.core demo.core, weasel weasel.repl, weasel.repl weasel.repl, figwheel figwheel.client, figwheel.client figwheel.client}, :uses nil, :defs {add-element {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/app.cljs", :line 12, :column 7, :end-line 12, :end-column 18, :arglists (quote ([]))}, :name demo.app/add-element, :variadic false, :file "src/cljs/demo/app.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag any}), :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros {figwheel figwheel.client, figwheel.client figwheel.client}, :cljs.analyzer/constants {:seen #{:verbose :print :jsload-callback :repl :websocket-url :console}, :order [:websocket-url :jsload-callback :verbose :print :repl :console]}, :doc nil}