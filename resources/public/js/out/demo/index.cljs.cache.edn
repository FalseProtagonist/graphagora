;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name demo.index, :imports nil, :requires {demo.util demo.util, demo.routes demo.routes, r reagent.core, reagent.core reagent.core}, :uses {set-history demo.routes, log demo.util, avail-width demo.util, avail-height demo.util}, :defs {r {:name demo.index/r, :file "src/cljs/demo/index.cljs", :line 38, :column 1, :end-line 38, :end-column 7, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/index.cljs", :line 38, :column 6, :end-line 38, :end-column 7}}, format {:name demo.index/format, :file "src/cljs/demo/index.cljs", :line 40, :column 1, :end-line 40, :end-column 12, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/index.cljs", :line 40, :column 6, :end-line 40, :end-column 12}}, index-component {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/index.cljs", :line 102, :column 7, :end-line 102, :end-column 22, :arglists (quote ([]))}, :name demo.index/index-component, :variadic false, :file "src/cljs/demo/index.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fill {:name demo.index/fill, :file "src/cljs/demo/index.cljs", :line 41, :column 1, :end-line 41, :end-column 10, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/index.cljs", :line 41, :column 6, :end-line 41, :end-column 10}}, bubble {:name demo.index/bubble, :file "src/cljs/demo/index.cljs", :line 42, :column 1, :end-line 42, :end-column 12, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/index.cljs", :line 42, :column 6, :end-line 42, :end-column 12}}, daddy-index {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/index.cljs", :line 76, :column 7, :end-line 76, :end-column 18, :arglists (quote ([]))}, :name demo.index/daddy-index, :variadic false, :file "src/cljs/demo/index.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-node {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/index.cljs", :line 61, :column 7, :end-line 61, :end-column 16, :arglists (quote ([link-data]))}, :name demo.index/make-node, :variadic false, :file "src/cljs/demo/index.cljs", :end-column 16, :method-params ([link-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([link-data]))}, make-chart {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/index.cljs", :line 51, :column 7, :end-line 51, :end-column 17, :arglists (quote ([]))}, :name demo.index/make-chart, :variadic false, :file "src/cljs/demo/index.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, link-data {:name demo.index/link-data, :file "src/cljs/demo/index.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/index.cljs", :line 9, :column 6, :end-line 9, :end-column 15}}, draw-svg {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/index.cljs", :line 99, :column 7, :end-line 99, :end-column 15, :arglists (quote ([]))}, :name demo.index/draw-svg, :variadic false, :file "src/cljs/demo/index.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:packageName :children :value :component-did-mount :className :div :reagent-render :link :div#index}, :order [:className :value :children :link :packageName :div :div#index :reagent-render :component-did-mount]}, :doc nil}