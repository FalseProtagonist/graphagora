;; Analyzed by ClojureScript 1.7.145
{:name demo.util, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {select-values {:name demo.util/select-values, :file "src/cljs/demo/util.cljs", :line 3, :column 1, :end-line 3, :end-column 19, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/util.cljs", :line 3, :column 6, :end-line 3, :end-column 19}}, alter-map {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/util.cljs", :line 5, :column 7, :end-line 5, :end-column 16, :arglists (quote ([m k-fns])), :doc "returns map with new values functions of old values\n  given list of k-fn pairs"}, :name demo.util/alter-map, :variadic false, :file "src/cljs/demo/util.cljs", :end-column 16, :method-params ([m k-fns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m k-fns])), :doc "returns map with new values functions of old values\n  given list of k-fn pairs"}, log {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/util.cljs", :line 14, :column 7, :end-line 14, :end-column 10, :arglists (quote ([msg & rest])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(msg rest)], :arglists ([msg & rest]), :arglists-meta (nil)}}, :name demo.util/log, :variadic true, :file "src/cljs/demo/util.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(msg rest)], :arglists ([msg & rest]), :arglists-meta (nil)}, :method-params [(msg rest)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists ([msg & rest])}, clear-component {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/util.cljs", :line 16, :column 7, :end-line 16, :end-column 22, :arglists (quote ([]))}, :name demo.util/clear-component, :variadic false, :file "src/cljs/demo/util.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, avail-height {:name demo.util/avail-height, :file "src/cljs/demo/util.cljs", :line 22, :column 1, :end-line 22, :end-column 18, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/util.cljs", :line 22, :column 6, :end-line 22, :end-column 18}}, avail-width {:name demo.util/avail-width, :file "src/cljs/demo/util.cljs", :line 24, :column 1, :end-line 24, :end-column 17, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/util.cljs", :line 24, :column 6, :end-line 24, :end-column 17}}}}