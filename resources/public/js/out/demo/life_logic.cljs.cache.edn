;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name demo.life-logic, :imports nil, :requires nil, :uses nil, :defs {swap-color {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 27, :column 7, :end-line 27, :end-column 17, :arglists (quote ([circle-data]))}, :name demo.life-logic/swap-color, :variadic false, :file "src/cljs/demo/life_logic.cljs", :end-column 17, :method-params ([circle-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([circle-data]))}, update-color {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 39, :column 7, :end-line 39, :end-column 19, :arglists (quote ([circles]))}, :name demo.life-logic/update-color, :variadic false, :file "src/cljs/demo/life_logic.cljs", :end-column 19, :method-params ([circles]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([circles]))}, get-circle-coordinates {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 10, :column 7, :end-line 10, :end-column 29, :arglists (quote ([nx ny r colormap]))}, :name demo.life-logic/get-circle-coordinates, :variadic false, :file "src/cljs/demo/life_logic.cljs", :end-column 29, :method-params ([nx ny r colormap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 4, :fn-var true, :arglists (quote ([nx ny r colormap]))}, update-color-main {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 42, :column 7, :end-line 42, :end-column 24, :arglists (quote ([circle-data]))}, :name demo.life-logic/update-color-main, :variadic false, :file "src/cljs/demo/life_logic.cljs", :end-column 24, :method-params ([circle-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([circle-data]))}, neighbours {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 45, :column 7, :end-line 45, :end-column 17, :arglists (quote ([nx ny pos & {:keys [wrap]}])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(nx ny pos {:keys [wrap]})], :arglists ([nx ny pos & {:keys [wrap]}]), :arglists-meta (nil)}}, :name demo.life-logic/neighbours, :variadic true, :file "src/cljs/demo/life_logic.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(nx ny pos {:keys [wrap]})], :arglists ([nx ny pos & {:keys [wrap]}]), :arglists-meta (nil)}, :method-params [(nx ny pos {:keys [wrap]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 3, :fn-var true, :arglists ([nx ny pos & {:keys [wrap]}])}, get-neighbours {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 61, :column 7, :end-line 61, :end-column 21, :arglists (quote ([circles nx ny pos]))}, :name demo.life-logic/get-neighbours, :variadic false, :file "src/cljs/demo/life_logic.cljs", :end-column 21, :method-params ([circles nx ny pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 4, :fn-var true, :arglists (quote ([circles nx ny pos]))}, states {:name demo.life-logic/states, :file "src/cljs/demo/life_logic.cljs", :line 3, :column 1, :end-line 3, :end-column 12, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 3, :column 6, :end-line 3, :end-column 12}}, count-live-neighbours {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 64, :column 7, :end-line 64, :end-column 28, :arglists (quote ([circles nx ny pos]))}, :name demo.life-logic/count-live-neighbours, :variadic false, :file "src/cljs/demo/life_logic.cljs", :end-column 28, :method-params ([circles nx ny pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 4, :fn-var true, :arglists (quote ([circles nx ny pos]))}, alive {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 23, :column 7, :end-line 23, :end-column 12, :arglists (quote ([num-neighbours current-state]))}, :name demo.life-logic/alive, :variadic false, :file "src/cljs/demo/life_logic.cljs", :end-column 12, :method-params ([num-neighbours current-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([num-neighbours current-state]))}, iterate-life {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 68, :column 7, :end-line 68, :end-column 19, :arglists (quote ([circles nx ny neighbours]))}, :name demo.life-logic/iterate-life, :variadic false, :file "src/cljs/demo/life_logic.cljs", :end-column 19, :method-params ([circles nx ny neighbours]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 4, :fn-var true, :arglists (quote ([circles nx ny neighbours]))}, hello {:name demo.life-logic/hello, :file "src/cljs/demo/life_logic.cljs", :line 6, :column 1, :end-line 6, :end-column 11, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 6, :column 6, :end-line 6, :end-column 11}}, color-map {:name demo.life-logic/color-map, :file "src/cljs/demo/life_logic.cljs", :line 4, :column 1, :end-line 4, :end-column 15, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 4, :column 6, :end-line 4, :end-column 15}}, select-values {:name demo.life-logic/select-values, :file "src/cljs/demo/life_logic.cljs", :line 8, :column 1, :end-line 8, :end-column 19, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 8, :column 6, :end-line 8, :end-column 19}}, iterate-life-main {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 78, :column 7, :end-line 78, :end-column 24, :arglists (quote ([data]))}, :name demo.life-logic/iterate-life-main, :variadic false, :file "src/cljs/demo/life_logic.cljs", :end-column 24, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, iterate-life-fixed {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/life_logic.cljs", :line 77, :column 7, :end-line 77, :end-column 25, :arglists (quote ([circles]))}, :name demo.life-logic/iterate-life-fixed, :variadic false, :file "src/cljs/demo/life_logic.cljs", :end-column 25, :method-params ([circles]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([circles]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :r :true :wrap :color :dead :alive :width :circles :x :live :height}, :order [:dead :live :x :y :r :alive :color :circles :width :height :wrap :true]}, :doc nil}