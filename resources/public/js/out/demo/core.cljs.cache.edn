;; Analyzed by ClojureScript 0.0-3058
{:use-macros nil, :excludes #{}, :name demo.core, :imports nil, :requires {graph demo.graph, demo.graph demo.graph}, :uses nil, :defs {app-state {:name demo.core/app-state, :file "src/cljs/demo/core.cljs", :line 7, :column 1, :end-line 7, :end-column 19, :test true, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 7, :column 10, :end-line 7, :end-column 19}}, main {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 10, :column 7, :end-line 10, :end-column 11, :arglists (quote ([]))}, :name demo.core/main, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag any}), :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:text}, :order [:text]}, :doc nil}