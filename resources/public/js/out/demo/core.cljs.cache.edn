;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name demo.core, :imports nil, :requires {clock demo.clock, logic demo.life-logic, draw demo.life-draw, demo.clock demo.clock, dom om.dom, reagent.core reagent.core, r reagent.core, demo.life-logic demo.life-logic, demo.life-draw demo.life-draw, om.dom om.dom, cljs.core.async cljs.core.async, demo.chart demo.chart, demo.life demo.life, life demo.life, om.core om.core, om om.core, chart demo.chart}, :uses {timeout cljs.core.async, pub cljs.core.async, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, sliding-buffer cljs.core.async, put! cljs.core.async}, :defs {life-component {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 35, :column 8, :end-line 35, :end-column 22, :arglists (quote ([]))}, :name demo.core/life-component, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-states {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 93, :column 7, :end-line 93, :end-column 17, :arglists (quote ([]))}, :name demo.core/get-states, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, home-component {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 95, :column 7, :end-line 95, :end-column 21, :arglists (quote ([]))}, :name demo.core/home-component, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 102, :column 7, :end-line 102, :end-column 11, :arglists (quote ([]))}, :name demo.core/main, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, hello-updater {:name demo.core/hello-updater, :file "src/cljs/demo/core.cljs", :line 64, :column 1, :end-line 64, :end-column 19, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 64, :column 6, :end-line 64, :end-column 19}}, alert-component {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 41, :column 7, :end-line 41, :end-column 22, :arglists (quote ([]))}, :name demo.core/alert-component, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, time-updater {:name demo.core/time-updater, :file "src/cljs/demo/core.cljs", :line 52, :column 1, :end-line 52, :end-column 18, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 52, :column 6, :end-line 52, :end-column 18}}, home {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 89, :column 7, :end-line 89, :end-column 11, :arglists (quote ([]))}, :name demo.core/home, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, timer {:name demo.core/timer, :file "src/cljs/demo/core.cljs", :line 44, :column 1, :end-line 44, :end-column 15, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 44, :column 10, :end-line 44, :end-column 15}}, play-life {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 26, :column 7, :end-line 26, :end-column 16, :arglists (quote ([circle-data n timeout nx ny neighbours]))}, :name demo.core/play-life, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 16, :method-params ([circle-data n timeout nx ny neighbours]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 6, :fn-var true, :arglists (quote ([circle-data n timeout nx ny neighbours]))}, get-state {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 91, :column 7, :end-line 91, :end-column 16, :arglists (quote ([]))}, :name demo.core/get-state, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, circle-data {:name demo.core/circle-data, :file "src/cljs/demo/core.cljs", :line 16, :column 1, :end-line 16, :end-column 17, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 16, :column 6, :end-line 16, :end-column 17}}, hello {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 59, :column 7, :end-line 59, :end-column 12, :arglists (quote ([]))}, :name demo.core/hello, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, home-did-mount {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 86, :column 7, :end-line 86, :end-column 21, :arglists (quote ([]))}, :name demo.core/home-did-mount, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, state {:name demo.core/state, :file "src/cljs/demo/core.cljs", :line 62, :column 1, :end-line 62, :end-column 15, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 62, :column 10, :end-line 62, :end-column 15}}, circle-state {:name demo.core/circle-state, :file "src/cljs/demo/core.cljs", :line 24, :column 1, :end-line 24, :end-column 18, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 24, :column 6, :end-line 24, :end-column 18}}, refresh-stuff {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 18, :column 7, :end-line 18, :end-column 20, :arglists (quote ([]))}, :name demo.core/refresh-stuff, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, hello2 {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 67, :column 7, :end-line 67, :end-column 13, :arglists (quote ([]))}, :name demo.core/hello2, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:component-did-mount :circles :component-did-update :div :reagent-render :div#d3-node}, :order [:div :div#d3-node :circles :reagent-render :component-did-mount :component-did-update]}, :doc nil}