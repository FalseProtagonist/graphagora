;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name demo.core, :imports nil, :requires {logic demo.life-logic, draw demo.life-draw, dom om.dom, reagent.core reagent.core, demo.index demo.index, r reagent.core, demo.life-logic demo.life-logic, routes demo.routes, demo.life-draw demo.life-draw, om.dom om.dom, index demo.index, cljs.core.async cljs.core.async, db demo.db, demo.db demo.db, demo.routes demo.routes, demo.life-core demo.life-core, life demo.life-core, om.core om.core, om om.core, demo.util demo.util}, :uses {timeout cljs.core.async, pub cljs.core.async, log demo.util, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, sliding-buffer cljs.core.async, put! cljs.core.async}, :defs {panels {:name demo.core/panels, :file "src/cljs/demo/core.cljs", :line 19, :column 1, :end-line 19, :end-column 12, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 19, :column 6, :end-line 19, :end-column 12}}, main-panel {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 21, :column 7, :end-line 21, :end-column 17, :arglists (quote ([dev-mode]))}, :name demo.core/main-panel, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 17, :method-params ([dev-mode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev-mode]))}, mount-root {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 26, :column 7, :end-line 26, :end-column 17, :arglists (quote ([]))}, :name demo.core/mount-root, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 30, :column 7, :end-line 30, :end-column 11, :arglists (quote ([dev-mode]))}, :name demo.core/main, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 11, :method-params ([dev-mode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev-mode]))}}, :require-macros {om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:index :hello :life :panel :div}, :order [:life :index :panel :div :hello]}, :doc nil}