;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name demo.core, :imports nil, :requires {logic demo.life-logic, draw demo.life-draw, dom om.dom, reagent.core reagent.core, r reagent.core, demo.life-logic demo.life-logic, demo.life-draw demo.life-draw, om.dom om.dom, cljs.core.async cljs.core.async, om.core om.core, om om.core}, :uses {timeout cljs.core.async, pub cljs.core.async, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, sliding-buffer cljs.core.async, put! cljs.core.async}, :defs {life-component {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 36, :column 7, :end-line 36, :end-column 21, :arglists (quote ([]))}, :name demo.core/life-component, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ny {:name demo.core/ny, :file "src/cljs/demo/core.cljs", :line 14, :column 1, :end-line 14, :end-column 8, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 14, :column 6, :end-line 14, :end-column 8}}, timeperiod {:name demo.core/timeperiod, :file "src/cljs/demo/core.cljs", :line 21, :column 1, :end-line 21, :end-column 16, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 21, :column 6, :end-line 21, :end-column 16}}, home-component {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 44, :column 7, :end-line 44, :end-column 21, :arglists (quote ([]))}, :name demo.core/home-component, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 53, :column 7, :end-line 53, :end-column 11, :arglists (quote ([]))}, :name demo.core/main, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, r {:name demo.core/r, :file "src/cljs/demo/core.cljs", :line 15, :column 1, :end-line 15, :end-column 7, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 15, :column 6, :end-line 15, :end-column 7}}, time-updater {:name demo.core/time-updater, :file "src/cljs/demo/core.cljs", :line 25, :column 1, :end-line 25, :end-column 18, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 25, :column 6, :end-line 25, :end-column 18}}, wrap {:name demo.core/wrap, :file "src/cljs/demo/core.cljs", :line 16, :column 1, :end-line 16, :end-column 10, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 16, :column 6, :end-line 16, :end-column 10}}, timer {:name demo.core/timer, :file "src/cljs/demo/core.cljs", :line 22, :column 1, :end-line 22, :end-column 15, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 22, :column 10, :end-line 22, :end-column 15}}, size-map {:name demo.core/size-map, :file "src/cljs/demo/core.cljs", :line 18, :column 1, :end-line 18, :end-column 14, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 18, :column 6, :end-line 18, :end-column 14}}, circle-data {:name demo.core/circle-data, :file "src/cljs/demo/core.cljs", :line 19, :column 1, :end-line 19, :end-column 17, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 19, :column 6, :end-line 19, :end-column 17}}, hello {:protocol-inline nil, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 41, :column 7, :end-line 41, :end-column 12, :arglists (quote ([]))}, :name demo.core/hello, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, color-map {:name demo.core/color-map, :file "src/cljs/demo/core.cljs", :line 17, :column 1, :end-line 17, :end-column 15, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 17, :column 6, :end-line 17, :end-column 15}}, state {:name demo.core/state, :file "src/cljs/demo/core.cljs", :line 23, :column 1, :end-line 23, :end-column 15, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 23, :column 10, :end-line 23, :end-column 15}}, circle-state {:name demo.core/circle-state, :file "src/cljs/demo/core.cljs", :line 20, :column 1, :end-line 20, :end-column 18, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 20, :column 6, :end-line 20, :end-column 18}}, nx {:name demo.core/nx, :file "src/cljs/demo/core.cljs", :line 13, :column 1, :end-line 13, :end-column 8, :meta {:file "/home/vagrant/graphagora/src/cljs/demo/core.cljs", :line 13, :column 6, :end-line 13, :end-column 8}}}, :require-macros {om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:true :wrap :dead :component-did-update :div :reagent-render :live}, :order [:true :live :dead :wrap :div :reagent-render :component-did-update]}, :doc nil}